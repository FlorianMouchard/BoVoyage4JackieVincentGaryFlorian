@model BoVoyage4.Areas.BackOffice.Models.RechercheVoyageViewModel

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>

<!-- Modal -->
<button type="button" class="btn btn-primary" data-toggle="modal" data-target="#rechercheVoyage">
    Filtrer
</button>

<div class="modal fade" id="rechercheVoyage" tabindex="-1" role="dialog" aria-labelledby="rechercheVoyageCenterTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLongTitle">Rechercher un voyage</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                @using (Html.BeginForm())
                {
                    <div class="form-horizontal">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            @Html.LabelFor(model => model.DateMin, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.DateMin, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.DateMin, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.DateMax, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.DateMax, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.DateMax, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.PrixMin, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.PrixMin, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.PrixMin, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.PrixMax, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.PrixMax, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.PrixMax, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Rchercher" ;" class="btn btn-default" />
                            </div>
                        </div>
                    </div>
                }

            </div>
            <div class="modal-footer">
            </div>
        </div>
    </div>
</div>

@if(Model.Voyages != null)
{

<table class="table">
    <tr>
        <th>
            Région
        </th>
        <th>
            Date de Départ
        </th>
        <th>
            Date de Retour
        </th>
        <th>
           Places Disponibles
        </th>
        <th>
            Tarif Tout Compris
        </th>
        <th>
            Agence de Voyage
        </th>
    </tr>

    @foreach (var item in Model.Voyages)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Destination.Region)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DateAller)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DateRetour)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PlacesDisponibles)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TarifToutCompris)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.AgenceVoyage.Nom)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.ID }) |
                @Html.ActionLink("Details", "Details", new { id = item.ID }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.ID })
            </td>
        </tr>
    }

</table>
}